<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Survey List</title>
    <link rel="stylesheet" href="<%= basePath %>/styles/styles.css">
    <!-- <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'> -->
    <link rel="stylesheet" href="<%= basePath %>/assets/icons/boxicons/css/boxicons.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Urbanist:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="<%= basePath %>/css/introjs.min.css">
<style>

        /* Additional styles for search input */
        #searchInput {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 100px;
        }

        body[dir="rtl"] .checkbox input[type="checkbox"] {
    margin-left: 10px !important; /* Margin for RTL */
    margin-right: 0; /* Reset any right margin */
}

        /* Hide rows that do not match the search */
        .hide-row {
            display: none;
        }
        .table-container {
    background-color: #fff;
    padding: 0.5rem;
    padding-top: 0;
    border-radius: 10px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    overflow: auto;
    height: 78vh;
  }
  /* .top-options{
    height: 15vh;
    background-color: #fff;
  } */
  thead th {
    position: sticky; /* Make the header sticky */
    top: 0;           /* Stick to the top */
    z-index: 1;       /* Ensure it stays above other content */
    background-color: #fff; /* Optional: Set a background color to ensure visibility */
    box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.4); /* Optional: Add a shadow for better visibility */
    padding: 10px;
    border-bottom: 1px solid #ddd;
}
body[dir="rtl"] {
      direction: rtl;
      text-align: right;
      font-family: "Arial", sans-serif;
    }

    body[dir="ltr"] {
      direction: ltr;
      text-align: left;
    }

    .language-selector {
      text-align: right;
    }

    .language-selector a {
      text-decoration: none;
      margin: 0 10px;
      color: #007BFF;
    }

    .language-selector a.active {
      font-weight: bold;
      text-decoration: underline;
    }
    .language-selector img {
      margin-right: 5px;
      width: 20px;
      height: auto;
      vertical-align: bottom;
    }
.introjs-tooltipbuttons {
    text-align: right; /* Align buttons to the right */

}

.help-btn {
    background-color: #007BFF;
    color: white;
    border: none;
    border-radius: 5px;
    padding: 10px 15px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
}

.help-btn:hover {
    background-color: #0056b3; /* Slightly darker blue on hover */
}


.help-button-container {
    position: fixed;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: #12171e;
  padding: 12px 0;
  transition: all 0.5s ease;
}

/* Ensure the button aligns well with sidebar's active state */
.sidebar.active .help-btn {
    color: #fff;
    display: flex;
    width: 100%;
    gap: 5px;
    align-items: center;
    text-decoration: none;
    border-radius: 0.8rem;
}

/* Modal Overlay */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(4px);
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.modal-overlay.active {
    opacity: 1;
    visibility: visible;
}

.modal-container {
    background: white;
    border-radius: 16px;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
    max-width: 400px;
    width: 90%;
    transform: scale(0.95) translateY(20px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
}

.modal-overlay.active .modal-container {
    transform: scale(1) translateY(0);
}

.modal-header {
    padding: 8px 24px 5px;
    text-align: center;
    background-color: #f44336;
}

.modal-icon {
    width: 64px;
    height: 64px;
    border-radius: 50%;
    background: #fee2e2;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 16px;
}

.modal-icon i {
    font-size: 32px;
    color: #dc2626;
}

.modal-title {
    font-size: 20px;
    font-weight: 600;
    color: #1f2937;
    margin: 0 0 8px;
}

.modal-subtitle {
    font-size: 14px;
    color: #6b7280;
    margin: 0;
}

.modal-body {
    padding: 0 24px 24px;
}

.warning-message {
    background: #fef3cd;
    border: 1px solid #fbbf24;
    border-radius: 8px;
    padding: 12px;
    margin-bottom: 20px;
}

.warning-message p {
    margin: 0;
    color: #92400e;
    font-size: 14px;
    display: flex;
    align-items: center;
    gap: 8px;
}

.specialty-info {
    background: #f9fafb;
    border-radius: 8px;
    padding: 16px;
    margin-bottom: 10px;
    margin-top: 15px;
}

.specialty-name {
    font-weight: 600;
    color: #1f2937;
    margin-bottom: 8px;
}

.survey-count {
    color: #6b7280;
    font-size: 14px;
}

.modal-footer {
    padding: 16px 24px 24px;
    display: flex;
    gap: 12px;
    justify-content: center;
}

.btn {
    padding: 10px 20px;
    border-radius: 8px;
    font-weight: 500;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.2s ease;
    border: none;
    display: flex;
    align-items: center;
    gap: 6px;
}

.btn-cancel {
    background: #f3f4f6;
    color: #374151;
}

.btn-cancel:hover {
    background: #e5e7eb;
}

.btn-delete {
    background: #dc2626;
    color: white;
}

.btn-delete:hover {
    background: #b91c1c;
}

.btn:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.btn.loading {
    opacity: 0.7;
    cursor: not-allowed;
}

.loading-spinner {
    width: 16px;
    height: 16px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

[dir="rtl"] .modal-footer {
    justify-content: flex-start;
}
</style>
</head>
<body>
    <div class="sidebar">
        <div class="top">
            <div class="logo">
                <img src="<%= basePath %>/assets/logo.png" alt="WeHealthify">
            </div>
            <i class="bx bx-menu" id="btn"></i>
        </div>

        <div class="user">
            <div>
                <p class="bold" id="adminRole">Admin</p>
                <p class="bold"><%= hospitalName %></p>
                <p class="bold"><%= site_code %></p>
                <hr class="spacer">
            </div>
        </div>
        <ul>
            <li>
                <a href="http://localhost/hospitaladmin/admin-dashboard">
                    <i class="bx bxs-grid-alt"></i>
                    <span class="nav-item" id="dashboardLabel">Admin Dashboard</span>
                </a>
                <span class="tooltip" id="dashboardTooltip">Dashboard</span>
            </li>
            <li>
                <a href="http://localhost/manageproviders">
                    <i class='bx bx-group'></i>
                    <span class="nav-item" id="manageProviders">Manage Providers</span>
                </a>
                <span class="tooltip" id="allProviders">All Providers</span>
            </li>
            <li>
                <a href="<%= basePath %>/">
                    <i class='bx bx-book-content'></i>
                    <span class="nav-item" id="manageSurveys">Manage Surveys</span>
                </a>
                <span class="tooltip" id="allSurveys">All Surveys</span>
            </li>
            <li>
                <a href="<%= basePath %>/add">
                    <i class='bx bx-folder-plus'></i>
                    <span class="nav-item" id="addSpecialty">Add New Specialty</span>
                </a>
                <span class="tooltip" id="newSpecialty">New Specialty</span>
            </li>
            <li>
                <a href="http://localhost/hospitaladmin/perf-dashboard">
                    <i class='bx bxs-report'></i>
                    <span class="nav-item" id="viewReports">View Reports</span>
                </a>
                <span class="tooltip" id="reports">Reports</span>
            </li>
            <li>
                <a href="http://localhost/hospitaladmin">
                    <i class="bx bx-log-out"></i>
                    <span class="nav-item" id="logoutLabel">Logout</span>
                </a>
                <span class="tooltip" id="logoutTooltip">Logout</span>
            </li>
        </ul>
        <div class="help-button-container">
            <button id="helpButton" class="help-btn">
                <span class="nav-item" id="helpLabel">Help </span>
                <i class='bx bx-help-circle'></i>
            </button>
            
        
        </div>
    </div>

    <div class="main-content">
        <div class="topbar" dir="<%= lng === 'ar' ? 'rtl' : 'ltr' %>">
            <h2 style="color: #333333;">
                <%= lng === 'ar' 
                    ? `مرحباً , ${firstName} ${lastName}` 
                    : `Welcome, ${firstName} ${lastName}` 
                %>
            </h2>
        </div>

        <hr style="opacity: 0.5;">
        <div class="language-selector" style="text-align: right; padding: 10px; background-color: #fff;">
            <a href="?lng=en" class="<%= lng === 'en' ? 'active' : '' %>">
                <img src="<%= basePath %>/assets/usa.png" alt="English Flag">English
            </a> |
            <a href="?lng=ar" class="<%= lng === 'ar' ? 'active' : '' %>">
                <img src="<%= basePath %>/assets/flag.png" alt="Arabic Flag">العربية
            </a>
          </div>
<div class="top-options">
    <br>
    <h2 id="surveyListHeader" style="color: #333333;">Survey List</h2><br>
    <!-- Add this line below the "Survey List" title -->
<input type="text" id="searchInput" placeholder="Search Specialty..." style="width: 50%; padding: 10px; margin-bottom: 20px; font-size: 16px;" data-title="Search" data-intro="Customizable search for your specialities" dir="<%= lng === 'ar' ? 'rtl' : 'ltr' %>">

</div>
<div class="table-container" dir="<%= lng === 'ar' ? 'rtl' : 'ltr' %>">

    <table>
        <thead>
            <tr>
                <th data-title="Specialities" data-intro="You can view the list of specialities here." id="specialityHeader" style="text-align: <%= lng === 'ar' ? 'right' : 'left' %>;">Specialty</th> 
                <th id="assignedSurveysHeader" data-title="Assigned Surveys" data-intro="View the list of assigned surveys for the speciality." style="text-align: <%= lng === 'ar' ? 'right' : 'left' %>;">Assigned Surveys</th>
                <th id="numberOfSurveysHeader" style="text-align: <%= lng === 'ar' ? 'right' : 'left' %>;">Number of Surveys</th>
                <th id="actionHeader" data-title="Edit/Delete" data-intro="You can Edit/Delete specialities here." style="text-align: <%= lng === 'ar' ? 'right' : 'left' %>;">Actions</th>
            </tr>
        </thead>
        <tbody id="surveyTable">
            <% surveys.forEach(survey => { %>
                <tr>
                    <td style="text-align: <%= lng === 'ar' ? 'right' : 'left' %>;" class="specialty"><%= survey.specialty %></td>                    
                    <td style="text-align: <%= lng === 'ar' ? 'right' : 'left' %>;">
                        <% if (survey.surveys && Array.isArray(survey.surveys)) { %>
                            <% survey.surveys.forEach(surveyItem => { %>
                                <div class="survey-item" style="display: flex; align-items: center; margin-bottom: 5px;">
                                    <span class="survey-name" style="
                                        
                                        color: #000000; 
                                        margin-right: 10px;
                                    ">
                                        <%= surveyItem.survey_name %>
                                    </span>
                                    <% if (surveyItem.selected_months && surveyItem.selected_months.length > 0) { %>
                                        <div class="months-container" style="display: flex; gap: 5px;">
                                            <% surveyItem.selected_months.forEach(month => { %>
                                                <span class="months-badge" style="
                                                    background-color: #CBFCC6; 
                                                    color: black; 
                                                    padding: 4px 10px; 
                                                    border-radius: 12px; 
                                                    font-size: 0.8em;
                                                    display: inline-block;
                                                ">
                                                    <%= month %>
                                                </span>
                                            <% }); %>
                                        </div>
                                    <% } %>
                                </div>
                            <% }); %>
                        <% } %>
                    </td>
                    <td style="text-align: <%= lng === 'ar' ? 'right' : 'left' %>;">            
                        <%= (survey.custom ? survey.custom.length : 0) + (survey.API ? survey.API.length : 0) %>
                    </td>
                    <td style="text-align: <%= lng === 'ar' ? 'right' : 'left' %>;">
                        <a href="<%= basePath %>/edit/<%= survey._id %>"><button class="edit-btn"><i class='bx bx-edit-alt'></i> <%= lng === 'ar' ? 'تعديل' : 'Edit' %></button></a>
                 <button type="button" class="delete-btn" onclick="showDeleteModal('<%= survey.specialty %>', '<%= survey._id %>', <%= (survey.custom ? survey.custom.length : 0) + (survey.API ? survey.API.length : 0) %>)">
    <i class='bx bxs-message-square-minus'></i> <%= lng === 'ar' ? 'حذف' : 'Delete' %>
</button>
                    </td>
                </tr>
            <% }); %>
        </tbody>
    </table>
</div>
    </div>

    <script src="<%= basePath %>/js/intro.min.js"></script>
    <script>
        document.getElementById('helpButton').addEventListener('click', function () {
    // Determine the current language (default to English)
    const lang = new URLSearchParams(window.location.search).get('lng') || getCookie('lng') || 'en';

    // Define translations for the steps
    const translations = {
        en: {
            step1: "Customizable search for your specialities.",
            step2: "You can view the list of specialities here.",
            step3: "View the list of assigned surveys for the speciality.",
            step4: "You can Edit/Delete specialities here."
        },
        ar: {
            step1: "بحث قابل للتخصيص عن التخصصات الخاصة بك.",
            step2: "يمكنك عرض قائمة التخصصات هنا.",
            step3: "عرض قائمة الاستبيانات المخصصة للتخصص.",
            step4: "يمكنك تحرير/حذف التخصصات هنا."
        }
    };

    // Define the steps for Intro.js
    const introSteps = [
        {
            element: '#searchInput', // Search input field
            intro: translations[lang].step1
        },
        {
            element: '#specialityHeader', // Specialty header
            intro: translations[lang].step2
        },
        {
            element: '#assignedSurveysHeader', // Assigned surveys header
            intro: translations[lang].step3
        },
        {
            element: '#actionHeader', // Actions header
            intro: translations[lang].step4
        }
    ];

    // Initialize and start Intro.js with dynamic labels for buttons
    introJs()
        .setOptions({
            steps: introSteps,
            rtl: lang === 'ar', // Enable RTL if the language is Arabic
            nextLabel: lang === 'ar' ? 'التالي' : 'Next',
            prevLabel: lang === 'ar' ? 'السابق' : 'Back',
            doneLabel: lang === 'ar' ? 'تم' : 'Done'
        })
        .start();
});

// Helper function to retrieve a cookie value by name
function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
    return null;
}

        
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const getCookie = (name) => {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
  };
  const params = new URLSearchParams(window.location.search);
  let currentLanguage = params.get('lng') || getCookie('lng') || 'en';

  // Set the language cookie
  document.cookie = `lng=${currentLanguage}; path=/`;
          const fetchUrl = `/surveyapp/locales/${currentLanguage}/translation.json`;

      
          // Set the `lang` and `dir` attributes for the HTML document
        //   document.documentElement.lang = currentLanguage;
        //   document.documentElement.dir = currentLanguage === 'ar' ? 'rtl' : 'ltr';
      
          fetch(fetchUrl)
            .then(response => {
              if (!response.ok) {
                console.warn(`Translation file not found for language: ${currentLanguage}. Falling back to English.`);
                return fetch(`/hospitaladmin/locales/en/translation.json`);
              }
              return response.json();
            })
            .then(translations => {
              console.log('Loaded translations:', translations);
      
              // Update the elements based on translation keys
              Object.keys(translations).forEach(id => {
                const element = document.getElementById(id);
      
                if (element) {
                    const translationValue = translations[id];

                    if (typeof translationValue === 'string') {
                        // Update regular text or HTML content
                        element.innerHTML = translationValue;
                    }
                      if (element.tagName === "INPUT" || element.tagName === "TEXTAREA") {

                        // Update placeholders for input elements

                        console.log(`Updating placeholder for ${id}:`, translationValue);

                        element.placeholder = translationValue;

                      }
                    else if (typeof translationValue === 'object') {
                                            // Handle nested object (e.g., lists)
                                            element.innerHTML = ''; // Clear existing content
                                            Object.values(translationValue).forEach(item => {
                                                const listItem = document.createElement('li');
                                                listItem.textContent = item;
                                                element.appendChild(listItem);
                                            });
                    } else {
                        console.warn(`Unexpected translation value type for "${id}":`, translationValue);
                    }
                }
              });
            })
            .catch(error => console.error('Error loading translations:', error));
        });
      </script>
        <script>
        let btn = document.querySelector('#btn');
        let sidebar = document.querySelector('.sidebar');

        btn.onclick = function() {
            sidebar.classList.toggle('active');
        };
    </script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const sidebarLinks = document.querySelectorAll('.sidebar ul li a');

        function removeCurrentPageClasses() {
            sidebarLinks.forEach(link => {
                link.classList.remove('CurrentPage');
            });
        }

        function setCurrentPageLink(path) {
            removeCurrentPageClasses();
            console.log(`Setting CurrentPage link for path: ${path}`);
            const currentPageLink = Array.from(sidebarLinks).find(link => {
                const linkPath = new URL(link.href).pathname;
                return linkPath === path;
            });
            if (currentPageLink) {
                console.log(`CurrentPage link found: ${currentPageLink.href}`);
                currentPageLink.classList.add('CurrentPage');
            } else {
                console.log(`No CurrentPage link found for path: ${path}`);
            }
        }

        // Check the URL path and set the current page link on page load
        const currentPath = window.location.pathname;
        console.log(`Current path: ${currentPath}`);
        setCurrentPageLink(currentPath);

        sidebarLinks.forEach(link => {
            link.addEventListener('click', function() {
                const targetPath = new URL(link.href).pathname;
                console.log(`Navigating to: ${targetPath}`);
                setCurrentPageLink(targetPath);
            });
        });
    });

    
</script>
<script>

    document.getElementById('searchInput').addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const rows = document.querySelectorAll('#surveyTable tr');

        rows.forEach(row => {
            const specialtyCell = row.querySelector('.specialty');
            const specialtyText = specialtyCell.textContent.toLowerCase();

            if (specialtyText.includes(searchTerm)) {
                row.style.display = ''; // Show the row
                specialtyCell.classList.add('highlight'); // Optional highlight
            } else {
                row.style.display = 'none'; // Hide the row
                specialtyCell.classList.remove('highlight'); // Remove highlight if not matched
            }

            if (searchTerm === '') {
                specialtyCell.classList.remove('highlight'); // Remove all highlights if search is cleared
            }
        });
    });


</script>

<!-- Delete Confirmation Modal -->
<div class="modal-overlay" id="deleteModal">
    <div class="modal-container">
        <div class="modal-header">
            <div class="modal-icon">
                <i class='bx bxs-trash'></i>
            </div>
            <h3 class="modal-title" id="modalTitle">Delete Specialty</h3>
            <!-- <p class="modal-subtitle">This action cannot be undone</p> -->
        </div>
        
        <div class="modal-body">
            <!-- <div class="warning-message">
                <p>
                    <i class='bx bxs-error-circle'></i>
                    <span>Deleting this specialty will permanently remove all associated data</span>
                </p>
            </div> -->
            
            <div class="specialty-info">
                <div class="specialty-name" id="specialtyName">Specialty Name</div>
                <div class="survey-count" id="surveyCount">0 surveys will be affected</div>
            </div>
        </div>
        
        <div class="modal-footer">
            <button class="btn btn-cancel" onclick="hideDeleteModal()">
                <!-- <i class='bx bx-x'></i> -->
                <span id="cancelBtnText">Cancel</span>
            </button>
            <button class="btn btn-delete" id="confirmDeleteBtn" onclick="confirmDelete()">
                <!-- <i class='bx bxs-trash'></i> -->
                <span id="deleteBtnText">Delete Specialty</span>
            </button>
        </div>
    </div>
</div>


<script>
    let currentSpecialtyId = null;

function showDeleteModal(specialtyName, specialtyId, surveyCount) {
    currentSpecialtyId = specialtyId;
    
    document.getElementById('specialtyName').textContent = specialtyName;
    document.getElementById('surveyCount').textContent = `${surveyCount} survey${surveyCount !== 1 ? 's' : ''} will be affected`;
    
    const modal = document.getElementById('deleteModal');
    modal.classList.add('active');
    
    setTimeout(() => {
        document.querySelector('.btn-cancel').focus();
    }, 300);
}

function hideDeleteModal() {
    const modal = document.getElementById('deleteModal');
    modal.classList.remove('active');
    currentSpecialtyId = null;
    
    const deleteBtn = document.getElementById('confirmDeleteBtn');
    deleteBtn.classList.remove('loading');
    deleteBtn.innerHTML = '<i class="bx bxs-trash"></i><span id="deleteBtnText">Delete Specialty</span>';
}

function confirmDelete() {
    if (!currentSpecialtyId) return;
    
    const deleteBtn = document.getElementById('confirmDeleteBtn');
    deleteBtn.classList.add('loading');
    deleteBtn.innerHTML = '<div class="loading-spinner"></div> Deleting...';
    
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = `<%= basePath %>/delete/${currentSpecialtyId}`;
    form.style.display = 'none';
    
    document.body.appendChild(form);
    form.submit();
}

// Close modal on overlay click
document.getElementById('deleteModal').addEventListener('click', function(e) {
    if (e.target === this) {
        hideDeleteModal();
    }
});

// Close modal on Escape key
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        hideDeleteModal();
    }
});
</script>
</body>
</html>
