<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="<%= basePath %>/styles.css">
    <!-- <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'> -->
    <link rel="stylesheet" href="<%= basePath %>/assets/icons/boxicons/css/boxicons.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Urbanist:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="<%= basePath %>/css/introjs.min.css">
    <style>
        /* tool tip styles */
.introjs-tooltipbuttons {
    text-align: right; /* Align buttons to the right */

}
body[dir="rtl"] {
      direction: rtl;
      text-align: right;
      font-family: "Arial", sans-serif;
    }

    body[dir="ltr"] {
      direction: ltr;
      text-align: left;
    }

    

    .language-selector {
      text-align: right;
    }

    .language-selector a {
      text-decoration: none;
      margin: 0 10px;
      color: #007BFF;
    }

    .language-selector a.active {
      font-weight: bold;
      text-decoration: underline;
    }
    .language-selector img {
      margin-right: 5px;
      width: 20px;
      height: auto;
      vertical-align: bottom;
    }
.help-btn {
    background-color: #007BFF;
    color: white;
    border: none;
    border-radius: 5px;
    padding: 10px 15px;
    cursor: pointer;
    font-size: 16px;
    margin: 0px !important;
    transition: background-color 0.3s ease;
}

.help-btn:hover {
    background-color: #0056b3; /* Slightly darker blue on hover */
}


.help-button-container {
    position: fixed;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: #12171e;
  padding: 12px 0;
  transition: all 0.5s ease;
}

/* Ensure the button aligns well with sidebar's active state */
.sidebar.active .help-btn {
    color: #fff;
    display: flex;
    width: 100%;
    gap: 5px;
    align-items: center;
    text-decoration: none;
    border-radius: 0.8rem;
}
    </style>
</head>
<body id="admin-dashboard">
    <div class="sidebar">
        <div class="top" data-title="Hello user!" data-intro="Expand pane for options">
            <% console.log('hospital_code is:', hospital_code); %>

            <div class="logo">
              <img src="<%= basePath %>/assets/<%= hospital_code %>.png" alt="WeHealthify">
            </div>
            
            <i class="bx bx-menu" id="btn"></i>
        </div>

        <div class="user">
            <div>
                <!-- <p class="bold">Hospital Admin</p> -->
                <p class="bold" id="adminRole">Admin</p>
                <p class="bold"><%= hospitalName %></p>
                <p class="bold"><%= site_code %></p>
                <hr class="spacer">
            </div>
        </div>
        <ul>
            <li>
                <a href="<%= basePath %>/admin-dashboard">
                    <i class="bx bxs-grid-alt"></i>
                    <span class="nav-item" id="dashboardLabel">Admin Dashboard</span>
                </a>
                <span class="tooltip" id="dashboardTooltip">Dashboard</span>
            </li>
            <li>
                <a href="http://localhost/manageproviders">
                    <i class='bx bx-group'></i>
                    <span class="nav-item" id="manageProviders">Manage Providers</span>
                </a>
                <span class="tooltip" id="allProviders">All Providers</span>
            </li>
            <li>
                <a href="http://localhost/surveyapp/">
                    <i class='bx bx-book-content'></i>
                    <span class="nav-item" id="manageSurveys">Manage Surveys</span>
                </a>
                <span class="tooltip" id="allSurveys">All Surveys</span>
            </li>
            <li>
                <a href="http://localhost/surveyapp/add">
                    <i class='bx bx-folder-plus'></i>
                    <span class="nav-item" id="addSpecialty">Add New Specialty</span>
                </a>
                <span class="tooltip" id="newSpecialty">New Specialty</span>
            </li>
            <li>
                <a href="<%= basePath %>/perf-dashboard">
                    <i class='bx bxs-report'></i>
                    <span class="nav-item" id="viewReports">View Reports</span>
                </a>
                <span class="tooltip" id="reports">Reports</span>
            </li>
            <li>
                <a href="<%= basePath %>">
                    <i class="bx bx-log-out"></i>
                    <span class="nav-item" id="logoutLabel">Logout</span>
                </a>
                <span class="tooltip" id="logoutTooltip">Logout</span>
            </li>
        </ul>

        <div class="help-button-container">
            <button id="helpButton" class="help-btn">
                <span class="nav-item" id="helpLabel">Help </span>
                <i class='bx bx-help-circle'></i>
            </button>
            
        
        </div>
    </div>

    <div class="main-content">
        <div class="topbar" dir="<%= lng === 'ar' ? 'rtl' : 'ltr' %>">
            <h2 style="color: #333333;">
                <%= lng === 'ar' 
                    ? `مرحباً , ${firstName} ${lastName}` 
                    : `Welcome, ${firstName} ${lastName}` 
                %>
            </h2>
        </div>

        <hr style="opacity: 0.5;">
        <div class="language-selector" style="text-align: right; padding: 10px; background-color: #f0f0f0;">
            <a href="?lng=en" class="<%= lng === 'en' ? 'active' : '' %>">
                <img src="<%= basePath %>/assets/usa.png" alt="English Flag">English
            </a> |
            <a href="?lng=ar" class="<%= lng === 'ar' ? 'active' : '' %>">
                <img src="<%= basePath %>/assets/flag.png" alt="Arabic Flag">العربية
            </a>
          </div>
        <div class="dashboard" dir="<%= lng === 'ar' ? 'rtl' : 'ltr' %>">
            <div class="blurbs">
                <div class="blurb" data-title="Manage Providers" data-intro="Add Providers by clinics & Sites">
                    <img src="<%= basePath %>/assets/images/manage-providers.png" alt="Manage Providers">
                    <h3 id="manageProvidersHeader">Manage Providers</h3>
                    <p id="manageProvidersText">Keep track of all your healthcare providers in one place.</p>
                    <a href="http://localhost/manageproviders">
                        <button class="cta-blurb" id="manageProvidersButton"><i class='bx bx-group'></i> Manage Providers</button>
                    </a>
                </div>
                <div class="blurb" data-title="Manage Surveys" data-intro="Assign PROMS tools based on specialties">
                    <img src="<%= basePath %>/assets/images/manage-surveys-final.png" alt="Manage Surveys">
                    <h3 id="manageSurveysHeader">Manage Surveys</h3>
                    <p id="manageSurveysText">Create, distribute, and analyze patient surveys with ease.</p>
                    <a href="http://localhost/surveyapp/">
                        <button class="cta-blurb" id="manageSurveysButton"><i class='bx bx-book-content'></i> Manage Surveys</button></a>
                </div>
                <div class="blurb" data-title="View Reports" data-intro="View Dashboards on outcomes & Performance">
                    <img src="<%= basePath %>/assets/images/View-Reports.png" alt="View Report">
                    <h3 id="viewReportsHeader">View Reports</h3>
                    <p id="viewReportsText">Access detailed reports and insights to make informed decisions.</p>
                    <a href="<%= basePath %>/perf-dashboard">
                        <button class="cta-blurb" id="viewReportsButton"><i class='bx bxs-report'></i> View Reports</button></a>
                </div>
            </div>
        </div>
    </div>

    <script src="<%= basePath %>/script.js"></script>

    <script src="<%= basePath %>/js/intro.min.js"></script>
    <script>
        document.getElementById('helpButton').addEventListener('click', function () {
    // Determine the current language (default to English)
    const lang = new URLSearchParams(window.location.search).get('lng') || getCookie('lng') || 'en';

    // Define translations for the steps
    const translations = {
        en: {
            step1: "Expand pane for options.",
            step2: "Manage your healthcare providers efficiently.",
            step3: "Create, distribute, and analyze surveys with ease.",
            step4: "Access detailed reports to make data-driven decisions."
        },
        ar: {
            step1: "قم بتوسيع اللوحة للحصول على الخيارات.",
            step2: "إدارة مقدمي الرعاية الصحية بكفاءة.",
            step3: "قم بإنشاء وتوزيع وتحليل الاستبيانات بسهولة.",
            step4: "الوصول إلى تقارير مفصلة لاتخاذ قرارات مبنية على البيانات."
        }
    };

    // Define the steps for Intro.js
    const introSteps = [
        {
            element: '.top', // First step: Expand pane
            intro: translations[lang].step1 // Use the translated step text
        },
        {
            element: '#manageProvidersButton', // Second step: Manage providers
            intro: translations[lang].step2 // Use the translated step text
        },
        {
            element: '#manageSurveysButton', // Third step: Manage surveys
            intro: translations[lang].step3 // Use the translated step text
        },
        {
            element: '#viewReportsButton', // Fourth step: View reports
            intro: translations[lang].step4 // Use the translated step text
        }
    ];

    // Initialize and start Intro.js with dynamic labels for buttons
    introJs()
        .setOptions({
            steps: introSteps,
            rtl: lang === 'ar', // Enable RTL if the language is Arabic
            nextLabel: lang === 'ar' ? 'التالي' : 'Next',
            prevLabel: lang === 'ar' ? 'السابق' : 'Back',
            doneLabel: lang === 'ar' ? 'تم' : 'Done'
        })
        .start();
});

// Helper function to retrieve a cookie value by name
function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
    return null;
}

        
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const getCookie = (name) => {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
  };
  const params = new URLSearchParams(window.location.search);
  let currentLanguage = params.get('lng') || getCookie('lng') || 'en';

  // Set the language cookie
  document.cookie = `lng=${currentLanguage}; path=/`;
          const fetchUrl = `/hospitaladmin/locales/${currentLanguage}/translation.json`;

      
          // Set the `lang` and `dir` attributes for the HTML document
        //   document.documentElement.lang = currentLanguage;
        //   document.documentElement.dir = currentLanguage === 'ar' ? 'rtl' : 'ltr';
      
          fetch(fetchUrl)
            .then(response => {
              if (!response.ok) {
                console.warn(`Translation file not found for language: ${currentLanguage}. Falling back to English.`);
                return fetch(`/hospitaladmin/locales/en/translation.json`);
              }
              return response.json();
            })
            .then(translations => {
              console.log('Loaded translations:', translations);
      
              // Update the elements based on translation keys
              Object.keys(translations).forEach(id => {
                const element = document.getElementById(id);
      
                if (element) {
                    const translationValue = translations[id];

                    if (typeof translationValue === 'string') {
                        // Update regular text or HTML content
                        element.innerHTML = translationValue;
                    }
                      if (element.tagName === "INPUT" || element.tagName === "TEXTAREA") {

                        // Update placeholders for input elements

                        console.log(`Updating placeholder for ${id}:`, translationValue);

                        element.placeholder = translationValue;

                      }
                    else if (typeof translationValue === 'object') {
                                            // Handle nested object (e.g., lists)
                                            element.innerHTML = ''; // Clear existing content
                                            Object.values(translationValue).forEach(item => {
                                                const listItem = document.createElement('li');
                                                listItem.textContent = item;
                                                element.appendChild(listItem);
                                            });
                    } else {
                        console.warn(`Unexpected translation value type for "${id}":`, translationValue);
                    }
                }
              });
            })
            .catch(error => console.error('Error loading translations:', error));
        });
      </script>
    <script>
        let btn = document.querySelector('#btn');
        let sidebar = document.querySelector('.sidebar');
      
        btn.onclick = function() {
            sidebar.classList.toggle('active');
        };
    </script>
      
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const sidebarLinks = document.querySelectorAll('.sidebar ul li a');
      
        function removeCurrentPageClasses() {
            sidebarLinks.forEach(link => {
                link.classList.remove('CurrentPage');
            });
        }
      
        function setCurrentPageLink(path) {
            removeCurrentPageClasses();
            const currentPageLink = Array.from(sidebarLinks).find(link => {
                const linkPath = new URL(link.href).pathname;
                return linkPath === path;
            });
            if (currentPageLink) {
                currentPageLink.classList.add('CurrentPage');
            }
        }
      
        // Check the URL path and set the current page link on page load
        const currentPath = window.location.pathname;
        setCurrentPageLink(currentPath);
      
        sidebarLinks.forEach(link => {
            link.addEventListener('click', function() {
                const targetPath = new URL(link.href).pathname;
                setCurrentPageLink(targetPath);
            });
        });
    });
    </script>
</body>
</html>
